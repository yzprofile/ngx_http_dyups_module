diff --git a/src/http/ngx_http_upstream.c b/src/http/ngx_http_upstream.c
index 9258243..ae55442 100644
--- a/src/http/ngx_http_upstream.c
+++ b/src/http/ngx_http_upstream.c
@@ -554,6 +554,7 @@ ngx_http_upstream_init_request(ngx_http_request_t *r)
     ngx_resolver_ctx_t             *ctx, temp;
     ngx_http_cleanup_t             *cln;
     ngx_http_upstream_t            *u;
+    ngx_http_upstream_dyup_t       *dyup, *dyupp;
     ngx_http_core_loc_conf_t       *clcf;
     ngx_http_upstream_srv_conf_t   *uscf, **uscfp;
     ngx_http_upstream_main_conf_t  *umcf;
@@ -685,6 +686,20 @@ ngx_http_upstream_init_request(ngx_http_request_t *r)
 
         uscf = u->conf->upstream;
 
+        umcf = ngx_http_get_module_main_conf(r, ngx_http_upstream_module);
+        dyupp = umcf->dyups.elts;
+
+        for (i = 0; i < umcf->dyups.nelts; i++) {
+            dyup = dyupp + i;
+
+            if (dyup->name.len == uscf->host.len
+                && ngx_strncasecmp(dyup->name.data, uscf->host.data, uscf->host.len) == 0)
+            {
+                uscf = dyup->uscf;
+                break;
+            }
+        }
+
     } else {
 
 #if (NGX_HTTP_SSL)
@@ -6415,6 +6430,13 @@ ngx_http_upstream_create_main_conf(ngx_conf_t *cf)
         return NULL;
     }
 
+    if (ngx_array_init(&umcf->dyups, cf->pool, 4,
+                       sizeof(ngx_http_upstream_dyup_t))
+        != NGX_OK)
+    {
+        return NULL;
+    }
+
     return umcf;
 }
 
diff --git a/src/http/ngx_http_upstream.h b/src/http/ngx_http_upstream.h
index 6079d72..2246c30 100644
--- a/src/http/ngx_http_upstream.h
+++ b/src/http/ngx_http_upstream.h
@@ -74,9 +74,12 @@ typedef struct {
     ngx_hash_t                       headers_in_hash;
     ngx_array_t                      upstreams;
                                              /* ngx_http_upstream_srv_conf_t */
+    ngx_array_t                      dyups;
+                                              /* ngx_http_upstream_dyup_t */
 } ngx_http_upstream_main_conf_t;
 
 typedef struct ngx_http_upstream_srv_conf_s  ngx_http_upstream_srv_conf_t;
+typedef struct ngx_http_upstream_dyup_s  ngx_http_upstream_dyup_t;
 
 typedef ngx_int_t (*ngx_http_upstream_init_pt)(ngx_conf_t *cf,
     ngx_http_upstream_srv_conf_t *us);
@@ -137,6 +140,12 @@ struct ngx_http_upstream_srv_conf_s {
 };
 
 
+struct ngx_http_upstream_dyup_s {
+    ngx_str_t                        name;
+    ngx_http_upstream_srv_conf_t    *uscf;
+};
+
+
 typedef struct {
     ngx_addr_t                      *addr;
     ngx_http_complex_value_t        *value;
@@ -434,4 +443,9 @@ extern ngx_conf_bitmask_t  ngx_http_upstream_cache_method_mask[];
 extern ngx_conf_bitmask_t  ngx_http_upstream_ignore_headers_masks[];
 
 
+#ifndef HAVE_DYUPS_UPSTREAM_PATCH
+#define HAVE_DYUPS_UPSTREAM_PATCH     1
+#endif
+
+
 #endif /* _NGX_HTTP_UPSTREAM_H_INCLUDED_ */
